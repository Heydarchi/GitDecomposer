# GitDecomposer Configuration

[project]
name = "gitdecomposer"
version = "1.0.0"
description = "A comprehensive Git repository analysis and visualization tool"
readme = "README.md"
license = "MIT"
authors = [
    {name = "GitDecomposer Team"}
]
maintainers = [
    {name = "GitDecomposer Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
]
keywords = ["git", "analysis", "visualization", "metrics", "repository"]
requires-python = ">=3.8"
dependencies = [
    "GitPython>=3.1.30",
    "pandas>=1.5.0",
    "matplotlib>=3.6.0",
    "seaborn>=0.11.0",
    "plotly>=5.11.0",
    "rich>=12.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "isort>=5.10.0",
    "mypy>=1.0.0",
    "pylint>=2.15.0",
]

[project.urls]
Homepage = "https://github.com/Heydarchi/GitDecomposer"
Repository = "https://github.com/Heydarchi/GitDecomposer"
Issues = "https://github.com/Heydarchi/GitDecomposer/issues"

[project.scripts]
gitdecomposer = "gitdecomposer.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["gitdecomposer*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
gitdecomposer = ["py.typed"]

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 120
# Deactivated flake8 errors to reduce noise
extend-ignore = "E203,W503,F401,E402,W291,W293,F841,E722,E501,F541,F406"
# Ignored error codes:
# - E203: whitespace before ':' (conflicts with black)
# - W503: line break before binary operator (conflicts with black)
# - F401: imported but unused (handled by isort/autoflake)
# - E402: module level import not at top of file
# - W291,W293: trailing whitespace (handled by black)
# - F841: local variable assigned but never used
# - E722: bare except clauses
# - E501: line too long (handled by black with 120 char limit)
# - F541: f-string missing placeholders
# - F406: import statement issues
exclude = [
    ".git",
    "__pycache__",
    ".tox",
    ".eggs",
    "*.egg",
    "build",
    "dist",
    ".venv",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"
