"""
Function to generate the main index.html page for the report.
"""

import logging
from typing import Dict

logger = logging.getLogger(__name__)


def create_index_page(output_path: str, report_links: Dict[str, str], csv_links: Dict[str, str], summary: Dict):
    """
    Creates a main index.html page with links to all reports and CSVs.

    Args:
        output_path (str): The path to save the index.html file.
        report_links (dict): A dictionary of report names to their file paths.
        csv_links (dict): A dictionary of CSV file names to their paths.
        summary (dict): The repository summary data.
    """
    repo_info = summary.get("repository_info", {})
    commits_info = summary.get("commits", {})
    contributors_info = summary.get("contributors", {})
    branches_info = summary.get("branches", {})

    report_list_items = "".join(f'<li><a href="{path}">{name}</a></li>' for name, path in report_links.items())
    csv_list_items = "".join(f'<li><a href="{path}">{name}</a></li>' for name, path in csv_links.items())

    html_content = f"""
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>GitDecomposer Analysis Report</title>
        <style>
            body {{ font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; margin: 0; background-color: #f8f9fa; color: #212529; }}
            .container {{ max-width: 960px; margin: 20px auto; padding: 20px; }}
            .header {{ background-color: #343a40; color: white; padding: 2rem; text-align: center; border-radius: 8px; }}
            .header h1 {{ margin: 0; font-size: 2.5rem; }}
            .header p {{ margin: 10px 0 0; font-size: 1.2rem; color: #adb5bd; }}
            .card {{ background-color: white; border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1); margin-bottom: 20px; overflow: hidden; }}
            .card-header {{ background-color: #f1f3f5; padding: 15px 20px; font-weight: 600; border-bottom: 1px solid #dee2e6; }}
            .card-body {{ padding: 20px; }}
            .grid {{ display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; }}
            .metric-box {{ background-color: #f8f9fa; padding: 15px; border-radius: 5px; text-align: center; }}
            .metric-box .value {{ font-size: 2rem; font-weight: 700; color: #007bff; }}
            .metric-box .label {{ font-size: 0.9rem; color: #6c757d; }}
            ul {{ list-style: none; padding: 0; }}
            li a {{ display: block; padding: 12px 20px; text-decoration: none; color: #007bff; border-bottom: 1px solid #e9ecef; }}
            li a:hover {{ background-color: #e9ecef; }}
            li:last-child a {{ border-bottom: none; }}
            .footer {{ text-align: center; padding: 20px; font-size: 0.9rem; color: #6c757d; }}
        </style>
    </head>
    <body>
        <div class="container">
            <div class="header">
                <h1>Analysis Report</h1>
                <p>{repo_info.get('path', 'N/A')}</p>
            </div>

            <div class="card">
                <div class="card-header">Repository Summary</div>
                <div class="card-body grid">
                    <div class="metric-box">
                        <div class="value">{commits_info.get('total_commits', 0)}</div>
                        <div class="label">Total Commits</div>
                    </div>
                    <div class="metric-box">
                        <div class="value">{contributors_info.get('total_contributors', 0)}</div>
                        <div class="label">Contributors</div>
                    </div>
                    <div class="metric-box">
                        <div class="value">{branches_info.get('total_branches', 0)}</div>
                        <div class="label">Branches</div>
                    </div>
                    <div class="metric-box">
                        <div class="value">{branches_info.get('branching_model', 'N/A')}</div>
                        <div class="label">Branching Model</div>
                    </div>
                </div>
            </div>

            <div class="card">
                <div class="card-header">Detailed Reports</div>
                <div class="card-body">
                    <ul>
                        {report_list_items}
                    </ul>
                </div>
            </div>

            <div class="card">
                <div class="card-header">Data Exports (CSV)</div>
                <div class="card-body">
                    <ul>
                        {csv_list_items}
                    </ul>
                </div>
            </div>
            <div class="footer">
                Generated by GitDecomposer
            </div>
        </div>
    </body>
    </html>
    """
    with open(output_path, "w", encoding="utf-8") as f:
        f.write(html_content)
        logger.info(f"Index page saved to {output_path}")
